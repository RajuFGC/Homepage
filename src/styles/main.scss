@import "components/page-header.scss";
@import "../../node_modules/normalize.css/normalize.css";
@import "components/navigation.scss";
@import "components/section-1.scss";
@import url('https://fonts.googleapis.com/css2?family=Rubik:wght@400;700&display=swap');
$textColor: hotpink;
$mycolor: yellow;
:root {
  --textColor: hotpink;
  --backgroundColor: whitesmoke;
}
@media (prefers-color-scheme: light) {
:root {
  --textColor: green;
  --backgroundColor: black;
}
}

html {
  box-sizing: border-box;
  font-size: 20px;
}
*,
*:before,
*:after {
  box-sizing: inherit;
}
body {
  background-image: linear-gradient(135deg, #8BC6EC 0%, #9599E2 100%);
  font-family: 'Rubik', sans-serif;
}
main {
  max-width: 768px;
  margin: 0 auto;
}
h1 {
  color: purple;
  padding: 10px;
}
h2 {
  color: #4c26b48f;
  background-color: white;
}
h3 {
  color: blueviolet;
  display: inline-block;/*in order for animations to take place we need to set the display:inline-block;*/
  transform-origin: bottom center ;
  animation: wave 2s infinite alternate ;/*first value tells us how long the animation will last and the second one is responsible for the number of times it will take place. Instead of "5" we can set the value to "infinite"*/
}
@keyframes wave {/*this is the name of animation*/
  0% {/*we can also set it to "from"*/
    transform: rotate(10deg);
  }
 50% {
  
 }
  100% {/*and here we set it to "to"*/
    transform: rotate(-10deg);
  }
  }


section {
 background: var(--backgroundColor);
 color: var(--textColor);
  
  padding: 10px;
  & a {
    color: orange;
  }
  & p {
    line-height: 1.5;
    font-size: 20px;
  }
}

.flex {
  display: flex;
  justify-content: center;
}
.Raju {
  border-radius: 5px;
  margin-bottom: 24px;
  align-items: center;
  justify-content: center;
  width: 250px;
  height: 350px;
}

#szkolenie {
  background-color: red;
  padding: 15px;
  color: yellow;
  margin: 0;
}
.paragraph {
  color: chartreuse;
}
.my-article p {
  padding: 15px;
  color: $mycolor; /*kolor zmieniony przez $mycolor ustalony wyzej*/
  background-color: darkblue;
  margin: 0;
}
.notatkiHeaderH2::before {
  content: "♻";
  color: green;
}
.notatkiHeaderH2::after {
  content: "♻";
  color: green;
}
.tworzenieHTML::before {
  content: "㊙";
  color: black;
}
.tworzenieHTML::after {
  content: "㊙";
  color: black;
}
.gitHeader::before {
content: "❗";
}
.gitHeader::after {
  content: "❗";
  }
  .my-article__list {
  list-style-type: circle;
  }
  .my-article__header::before {
content: "☮";
color: goldenrod;
  }
  .my-article__header::after {
    content: "☮";
    color: goldenrod;
      }


.hamburger {
  padding: 4px;
  background: none;
  border: none;
  font-size: 30px;
}
.header {
  position:relative;
  display: flex;
  justify-content: flex-end;
  position: sticky;
  top: 0;
  min-height: 33px;
  background: blue;
}

  footer {
    padding: 10px;
    color: red;
    max-width: 768px;
    margin: 0 auto;
    & .footer__top-link {
      position: fixed;
      bottom: 16px;
      right: 16px;
      color: white;
      padding: 8px 12px;
      background-color: black;
      border-radius: 12px;
      display: block;
    }
  }
.text-distnguish {
color: grey;
}
table {
  width: 100%;
  text-align: center;
}
table caption {
  margin-bottom: 2rem;
}
@media screen and (min-width: 768px) {
  body {
    background: black;
  }
  .page-header_heading {
    font-size: 2rem;
    color: hotpink;
}
.navigation {
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: center;
  background: blue;
  position: static;
  gap: 24px;
  &-link {
    color: yellow;
    margin: 5px;
  }
}
.hamburger {
  padding: 4px;
  background: none;
  border: none;
  font-size: 30px;
  display: none;
}
}
@media screen and (min-width: 1280px) {
   .page-header_heading {
    font-size: 3rem;
}
}


/*element.addEventListener(type, listener[, options])
*/

/*element.addEventListener('click', nazwaFunkcji);
*/










